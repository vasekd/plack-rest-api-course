#!env /usr/bin/perl

use strict;
use warnings;
use utf8;

use autodie;
use FindBin ();

use lib (".", "$FindBin::Bin/../Presentation-Builder/lib/");

use Presentation::Builder::SlideCollection::Reveal;
use Presentation::Builder::RunEnv;
use Presentation::Builder::RunCmd qw/cmdo cd/;

# Parameters:
my $sleep_mult = (defined $ARGV[1]) ? $ARGV[1] : 1;
my $verbose_level = $ARGV[2] // 3;

my $temp_user_name = 'vasek';
my $course_dir = 'prbuilder';


my $sc = Presentation::Builder::SlideCollection::Reveal->new(
	title => 'Rest API in Plack(PSGI)',
	subtitle => '',
	author => 'Václav Dovrtěl',
#	author_url => '',
	date => 'Mar 2015',
	revealjs_dir => File::Spec->catdir( $FindBin::RealBin, '..', 'reveal.js','js', 'reveal.js' ),
	out_fpath => File::Spec->catfile( $FindBin::RealBin, '..', 'reveal.js', 'index.html' ),
	sleep_mult => $sleep_mult,
	vl => $verbose_level,
);
sub ap { $sc->process_slide_part(@_) };
sub pc { $sc->process_command(@_) };
sub ar { $sc->add_slide_raw(@_) };
sub sl_sleep { $sc->process_sleep(@_) };

sub img {
	my ( $img_fname, $width ) = @_;
	$width //= '600px';
	return sprintf(
		'<img%s src="%s">',
		(defined $width) ? qq/ width="$width"/ : '',
		'./img/' . $img_fname
	);
}

my $whoami = pc cmdo 'whoami', no => 1;
die "No user '$temp_user_name' but '$whoami'.\n" unless $whoami eq $temp_user_name;

my $home_dir = '/home/'.$temp_user_name;
my $base_dir = $home_dir . '/' . $course_dir;
my $tmp_dir = $home_dir . '/' . $course_dir . '/temp';

die "Directory '$base_dir' not found." unless -d $base_dir;

my $run_env = Presentation::Builder::RunEnv->new(
	reset_env => sub {
		pc cmdo 'stty cols 70', no => 1;
		pc cmdo "mkdir -p $tmp_dir", no => 1;
	},
	init_env => sub {
		chdir( $home_dir );
	},
);

=overview
- overview
- psgi
- plack tools
- utilites
=cut

$sc->add_slide(
	'TOC',
	markdown => <<'MD_END',

 * PSGI, Plack intro
 * Rest API middlewares
 * Example

MD_END

	notes => <<'MD_NOTES',
* Who know it?
MD_NOTES
);

$sc->add_slide(
	'History',
	markdown => <<'MD_END',
* SOAP
 * InsightStrategy - Apache (CGI.pm) - 2003
* REST API
 * GoodData - Apache (CGI.pm, mod_perl) - 2006
 * BHI - <span style="color:red">Starman, ZeroGW, Twiggy (PSGI)</span> - 2011
MD_END

	notes => <<'MD_NOTES',
* implementace serveru pro BI
* PSGI hlavne rychlost jak vyvoje, tak vlastniho serveru diky placku
* PSGI - Miyagawa
MD_NOTES
);

$sc->add_slide(
	'Overview?',
	markdown => <<'MD_END',

	obr: server, handler, psgi + middleware, server code

 * 

MD_END
	notes => <<'MD_NOTES',
MD_NOTES
);

$sc->add_slide(
	'Performance',
	markdown => <<'MD_END',

4core i5, 8GB RAM

"Hello World" test:

 * Monoceros - 19k req/s
 * Twiggy (PreFork) - 14k req/s
 * Starman - 10k req/s
 * NodeJS - 5k req/s
 * Apache - 1k req/s

MD_END
	notes => <<'MD_NOTES',
MD_NOTES
);

$sc->add_slide(
	' ',
	markdown => <<'MD_END',
Václav Dovrtěl
<br><br>
<small>Presentation generated by [github.com/mj41/Presentation-Builder](https://github.com/mj41/Presentation-Builder)<br>
powered by [github.com/hakimel/reveal.js](https://github.com/hakimel/reveal.js).
</small>

MD_END
);

$sc->run_all( $run_env );
